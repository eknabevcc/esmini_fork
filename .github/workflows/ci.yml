name: Continuous Integration

permissions:
  contents: write

on:
  push:
    branches:
      - master
      - dev
      - 'feature/**'
    tags:
      - v[0-9]+.[0-9]+.[0-9]+

  pull_request:
    branches:
      - master
      - dev

  workflow_dispatch:

jobs:
  test-no-external-modules:

    strategy:
      matrix:
        os: [windows-2019]
        configuration: [Release]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4.1.7
        with:
          submodules: true
          fetch-tags: true
          fetch-depth: 0

      - uses: ./.github/actions/setup_tools_shared

      - name: Cache
        uses: actions/cache@v4.0.2
        with:
          path: |
            externals/googletest
            externals/osg
            externals/osi
            externals/sumo
            externals/implot
            resources/models
          key: ${{ runner.os }}-external-resources

      # TODO: We need a way to not fetch existing dependencies because of cached ones. This command currently asks for user input
      #- name: Fetch external dependencies/resources
      #  run: python3 support/python/src/main.py fetch dependency

      #- name: Generate OpenDrive interface
      #  run: python3 support/python/src/main.py generate opendrive

      - name: Install clang-tidy-15 - Ubuntu
        if: runner.os == 'Linux'
        env:
          LLVM_URL: http://apt.llvm.org/focal/
          LLVM_PKG: llvm-toolchain-focal-15
        run: wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add - 2>/dev/null
          && sudo add-apt-repository -y "deb ${{ env.LLVM_URL }} ${{ env.LLVM_PKG }} main"
          && sudo apt-get update -q
          && sudo apt-get install -y -q clang-tidy-15
          && sudo update-alternatives --install /usr/bin/clang-tidy clang-tidy /usr/bin/clang-tidy-15 200

      - name: Build cppcheck 2.10 - Ubuntu
        if: runner.os == 'Linux'
        env:
          CPPCHECK_BUILD: /home/cppcheck/build
          CPPCHECK_SRC: /home/cppcheck/cppcheck-src
        run: sudo apt-get purge --auto-remove cppcheck
          && sudo apt-get install -y -q libxml2-utils libz3-dev libtinyxml2-dev libpcre3-dev
          && sudo mkdir -p ${{ env.CPPCHECK_BUILD }}
          && git clone --branch 2.10 https://github.com/danmar/cppcheck.git ${{ env.CPPCHECK_SRC }}
          && cmake -S ${{ env.CPPCHECK_SRC }} -B ${{ env.CPPCHECK_BUILD }} -G "Ninja" -DCMAKE_BUILD_TYPE:STRING=Release -DHAVE_RULES=On -DBUILD_GUI=Off
          && cmake --build ${{ env.CPPCHECK_BUILD }} -j
          && sudo cmake --install ${{ env.CPPCHECK_BUILD }}

      - name: CMake Configure - Default
        if: runner.os != 'macOS'
        shell: pwsh
        run: cmake "--preset=ci-$("${{ matrix.os }}".split("-")[0])-test-no-external-modules" -DCMAKE_BUILD_TYPE:STRING=${{ matrix.configuration }}

      - name: CMake Configure - macOS
        if: runner.os == 'macOS'
        shell: pwsh
        run: cmake "--preset=ci-$("${{ matrix.os }}".split("-")[0])-test-no-external-modules" -DCMAKE_BUILD_TYPE:STRING=${{ matrix.configuration }} -DCMAKE_OSX_ARCHITECTURES="arm64;x86_64"

      - name: CMake Build
        run: cmake --build build --config ${{ matrix.configuration }} --target install -j 2

      # run xml validation only here.
      # 1. Only needs to run once
      # 2. It's not dependent on configuration, so it can be run by any config
      # 3. This configuration is faster so validation won't add to total CI run time
      - name: Run schema validation
        if: runner.os == 'Linux' && matrix.configuration == 'Release'
        run: python3 scripts/run_schema_comply.py resources EnvironmentSimulator

      - name: Run Tests - Unix
        if: runner.os != 'Windows'
        uses: coactions/setup-xvfb@v1.0.1
        with:
          run: ./scripts/run_tests.sh ${{ matrix.configuration }} false

      - name: Run Tests - Windows
        if: runner.os == 'Windows'
        env:
          GALLIUM_DRIVER: softpipe
          MESA_GL_VERSION_OVERRIDE: 4.5
        shell: bash
        run: ./scripts/run_tests.sh ${{ matrix.configuration }} false

